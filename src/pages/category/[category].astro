---
import BaseLayout from '../../layouts/BaseLayout.astro';
import RecipeCard from '../../components/RecipeCard.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const allRecipes = await getCollection('recipes');

  // Get unique categories and validate them
  const uniqueCategories = [...new Set(
    allRecipes.map((recipe) => recipe.data.category.toLowerCase().trim()).filter(Boolean)
  )];

  // Generate pages for each valid category
  return uniqueCategories.map((category) => {
    const filteredRecipes = allRecipes
      .filter((recipe) => recipe.data.category.toLowerCase().trim() === category)
      .sort((a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime());

    return {
      params: { category },
      props: {
        recipes: filteredRecipes,
        categoryName:
          allRecipes.find((r) => r.data.category.toLowerCase().trim() === category)?.data.category ||
          category,
        totalRecipes: filteredRecipes.length,
      },
    };
  });
}

type Props = {
  recipes: any[]; // සරලව තියමු
  categoryName: string;
};
const { recipes, categoryName } = Astro.props;

const seoProps = {
  title: `${categoryName} Recipes`,
  description: `Find the best ${categoryName} recipes on our site.`,
};
---
<style>
  .section-title {
    font-size: 2.2rem;
    font-weight: 700;
    margin-bottom: 1.5rem;
    border-bottom: 2px solid #FF6B6B;
    padding-bottom: 0.5rem;
    display: inline-block;
  }
  .recipe-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1.5rem;
  }
</style>

<BaseLayout seo={seoProps}>
  <h1 class="section-title">Category: {categoryName}</h1>
  
  <div class="recipe-grid">
    {recipes.map(recipe => (
      <RecipeCard recipe={recipe} />
    ))}
  </div>
</BaseLayout>