---
// src/components/Seo.astro (Corrected Image URL Handling & Default Description)
import { SEO } from "astro-seo";
import type { Props as SEOProps } from "astro-seo";

export interface Props extends SEOProps {}

const props = Astro.props;

let imageUrl = '/images/social-hero.jpg';
const imageFromProps = props.openGraph?.basic?.image;

if (imageFromProps) {
  if (imageFromProps.startsWith('http://') || imageFromProps.startsWith('https://')) {
    imageUrl = imageFromProps;
  } else {
    if (Astro.site) {
       try {
         imageUrl = new URL(imageFromProps, Astro.site).href;
       } catch (e) {
         console.error(`Error creating URL for image: ${imageFromProps}`, e);
         imageUrl = new URL('/images/social-hero.jpg', Astro.site).href;
       }
    } else {
       imageUrl = imageFromProps;
    }
  }
} else if (Astro.site) {
    try {
        imageUrl = new URL('/images/social-hero.jpg', Astro.site).href;
    } catch (e) {
        console.error('Error creating URL for default social image', e);
        imageUrl = '/images/social-hero.jpg';
    }
}

const defaultTitle = "Vegas Recipes";
// --- CHANGE: Updated Default Description ---
const defaultDescription = "Explore delicious and simple recipes from US trends to global flavors, perfect for every home cook.";
// --- END CHANGE ---

---
<SEO
  {...props}
  charset="UTF-8"
  titleDefault={defaultTitle}
  descriptionDefault={defaultDescription}
  openGraph={{
    basic: {
      title: props.title || defaultTitle,
      type: props.openGraph?.basic?.type || "website",
      image: imageUrl,
      url: Astro.url.toString(),
    },
    ...(props.openGraph || {})
  }}
  twitter={{
    card: "summary_large_image",
    site: "@YourTwitterHandle", // TODO: Update with your Twitter handle
    creator: "@YourTwitterHandle", // TODO: Update with your Twitter handle
    ...(props.twitter || {})
  }}
  extend={{
    meta: [
      { name: "viewport", content: "width=device-width, initial-scale=1.0" },
      ...(props.extend?.meta || [])
    ],
    link: [
      { rel: "icon", href: "/favicon.ico" }, // TODO: Add your favicon.ico to public/
      ...(props.extend?.link || [])
    ]
  }}
/>